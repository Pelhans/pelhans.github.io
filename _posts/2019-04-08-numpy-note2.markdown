---
layout:     post
title:      "Numpy 笔记"
subtitle:   "101 道 pyhton 习题 答案"
date:       2019-04-08 00:15:18
author:     "Pelhans"
header-img: "img/kg_bg.jpg"
header-mask: 0.3 
catalog:    true
tags:
    - Python
---

> 在网上发现 [101 NumPy Exercises for Data Analysis (Python)](https://www.machinelearningplus.com/python/101-numpy-exercises-python/#top)，但点击 solution 没有反应。。因此想自己做一遍整理出答案，也方便自己以后看。

* TOC
{:toc}

# 1. Import numpy as np and see the version
Q. Import numpy as `np` and print the version number.

```
In [1]: import numpy as np
In [2]: np.__version__
Out[2]: '1.14.3'
```

# 2. How to create a 1D array?
Q. Create a 1D array of numbers from 0 to 9

```
In [3]: np.arange(10)
Out[3]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
```

# 3. How to create a boolean array?
Q. Create a 3×3 numpy array of all True’s

```
In [5]: np.asarray([True]*(3*3)).reshape(3,3)
Out[5]: 
    array([[ True,  True,  True ],
            [ True,  True,  True ],
            [ True,  True,  True ]])
```

# 4. How to extract items that satisfy a given condition from 1D array?
Q. Extract all odd numbers from arr

```
In [6]: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
In [7]: arr[arr%2!=0]
Out[7]: array([1, 3, 5, 7, 9])
```

# 5. How to replace items that satisfy a condition with another value in numpy array?
Q. Replace all odd numbers in arr with -1

```
In [7]: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
In [8]: arr[arr%2!=0] = -1
In [9]: arr
Out[9]: array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1 ])
```

# 6. How to replace items that satisfy a condition without affecting the original array?
Q. Replace all odd numbers in arr with -1 without changing arr

```
In [26]: arr = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
In [27]: b = arr.copy()
In [28]: b[arr%2!=0] = -1
In [29]: b
Out[29]: array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1 ])
In [31]: arr
Out[31]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
```

# 7. How to reshape an array?
Q. Convert a 1D array to a 2D array with 2 rows

```
a = np.arange(10)
# 改变 原数组
a.resize(2, 5)
In [36]: a
Out[36]: 
    array([[0, 1, 2, 3, 4],
         [5, 6, 7, 8, 9]])
# 不改变原数组
In [40]: np.reshape(a, (2,5))
Out[40]: 
    array([[0, 1, 2, 3, 4],
           [5, 6, 7, 8, 9]])
# 也可以 
In [43]: a.reshape(2,5)
Out[43]: 
    array([[0, 1, 2, 3, 4],
            [5, 6, 7, 8, 9]])
```

# 8. How to stack two arrays vertically?
Q. Stack arrays a and b vertically

```
In [44]: a = np.arange(10).reshape(2,-1)
In [45]: b = np.repeat(1, 10).reshape(2,-1)
In [47]: np.vstack((a,b))
Out[47]: 
    array([[0, 1, 2, 3, 4],
        [5, 6, 7, 8, 9],
        [1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1]])
```

# 9. How to stack two arrays horizontally?
Q. Stack the arrays a and b horizontally.

```
In [48]: a = np.arange(10).reshape(2,-1)
In [49]: b = np.repeat(1, 10).reshape(2,-1)
In [52]: np.hstack((a,b))
Out[52]: 
    array([[0, 1, 2, 3, 4, 1, 1, 1, 1, 1],
            [5, 6, 7, 8, 9, 1, 1, 1, 1, 1]])
# 方法 2
In [54]: np.concatenate([a,b], axis=1)
Out[54]: 
    array([[0, 1, 2, 3, 4, 1, 1, 1, 1, 1],
            [5, 6, 7, 8, 9, 1, 1, 1, 1, 1]])
```

# 10. How to generate custom sequences in numpy without hardcoding?
Q. Create the following pattern without hardcoding. Use only numpy functions and the below input array a.

```
In [67]: a = np.array([1,2,3])
In [68]: b = np.repeat(a, 3)
In [74]: c = np.tile(a, 3)
In [76]: np.concatenate((b,c))
Out[76]: array([1, 1, 1, 2, 2, 2, 3, 3, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3])
```
